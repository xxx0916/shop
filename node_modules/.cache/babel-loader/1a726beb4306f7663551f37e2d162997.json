{"ast":null,"code":"import QRCode from 'qrcode';\nexport default {\n  name: 'Pay',\n\n  data() {\n    return {\n      payInfo: {},\n      timer: null,\n      code: '' //支付的状态码\n\n    };\n  },\n\n  // 尽量别再生命周期函数中async|awit\n  mounted() {\n    this.getPayInfo();\n  },\n\n  methods: {\n    // 获取支付信息\n    async getPayInfo() {\n      let result = await this.$API.reqPayInfo(this.orderId); //  console.log(result);\n      // 成功：在组件当中存储支付信息\n\n      if (result.code == 200) {\n        this.payInfo = result.data;\n      }\n    },\n\n    // 弹出框（支付二维码）\n    async open() {\n      // 生成二维码(地址)\n      let url = await QRCode.toDataURL(this.payInfo.codeUrl);\n      this.$alert(`<img src=\"${url}\"/>`, '请使用微信扫码支付', {\n        dangerouslyUseHTMLString: true,\n        // 中间部分\n        center: true,\n        showCancelButton: true,\n        //是否显示取消按钮\n        cancelButtonText: '支付遇到问题',\n        //\t取消按钮的文本内容\n        confirmButtonText: '已支付成功',\n        //\t确定按钮的文本内容\n        showClose: false,\n        //MessageBox 是否显示右上角关闭按钮\n        // 关闭弹出框的配置值\n        beforeClose: (type, instance, done) => {\n          // type:区分取消|确认按钮\n          // instance:当前组件实例\n          // done:关闭弹出框的方法\n          if (type == 'cancel') {\n            alert(\"请联系管理员\"); // 清除定时器\n\n            clearInterval(this.timer);\n            this.timer = null; // 关闭弹出框\n\n            done();\n          } else {\n            // 判断是否真的支付了\n            // 为了方便，这个判断先注释掉\n            // if(this.code==200){\n            clearInterval(this.timer);\n            this.timer = null;\n            done();\n            this.$router.push(\"/paysuccess\"); // }\n          }\n        }\n      }); // 支付成功|失败\n      // 支付成功，路由跳转，支付失败，提示信息\n      // 定时器没有，开启一个新的定时器\n\n      if (!this.timer) {\n        this.timer = setInterval(async () => {\n          // 发请求获取用户支付状态\n          let result = await this.$API.reqPayStatus(this.orderId); //  console.log(result);\n          //  code==200\n\n          if (result.code == 200) {\n            // 第一步：清空定时器\n            clearInterval(this.timer);\n            this.timer = null; // 保存支付成功返回的code;\n\n            this.code = result.code; // 关闭弹出框\n\n            this.$msgbox.close(); // 跳转到下一路由\n\n            this.$router.push(\"/paysuccess\");\n          }\n        }, 1000);\n      }\n    }\n\n  },\n  computed: {\n    orderId() {\n      return this.$route.query.orderId;\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}