{"ast":null,"code":"import { reqGetSearchInfo } from '@/api'; // search模块的小仓库\n// state:仓库存储数据的地方\n\nconst state = {\n  // 仓库初始化\n  searchList: {}\n}; // mutations:修改state的唯一手段\n\nconst mutations = {\n  GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n\n}; // action:处理action,可以书写自己的业务逻辑，也可以吃了异步\n\nconst actions = {\n  // 获取search模块数据\n  async getSearchList({\n    commit\n  }, params = {}) {\n    // 当前增reqGetSearchInfo这个函数在调用服务器数据的时候，至少传递一个参数（空对象）\n    // params形参：是当前用户派发action的时候，在二个参数传递过来的，至少是一个空对象\n    let result = await reqGetSearchInfo(params);\n\n    if (result.code == 200) {\n      commit('GETSEARCHLIST', result.data);\n    }\n  }\n\n}; // getters:理解为计算属性，用于简化仓库数据，让组件获取仓库的数据更加方便\n\nconst getters = {\n  // 当前形参state,当前仓库中的state,并非大仓库中的state\n  goodsList(state) {\n    // state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\n    // 假如没有网或者网络不给力state.searchList.goodsList应该返回的是undefined\n    // 计算新的属性的属性值至少给人家来一个空数组\n    return state.searchList.goodsList || [];\n  },\n\n  trademarkList(state) {\n    return state.searchList.trademarkList || [];\n  },\n\n  attrsList(state) {\n    return state.searchList.attrsList || [];\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetSearchInfo","state","searchList","mutations","GETSEARCHLIST","actions","getSearchList","commit","params","result","code","data","getters","goodsList","trademarkList","attrsList"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/store/search/index.js"],"sourcesContent":["import {reqGetSearchInfo} from '@/api'\r\n// search模块的小仓库\r\n// state:仓库存储数据的地方\r\nconst state = {\r\n    // 仓库初始化\r\n    searchList:{},\r\n};\r\n// mutations:修改state的唯一手段\r\nconst mutations= {\r\n    GETSEARCHLIST(state,searchList){\r\n        state.searchList=searchList\r\n    }\r\n};\r\n// action:处理action,可以书写自己的业务逻辑，也可以吃了异步\r\nconst actions={\r\n    // 获取search模块数据\r\n    async getSearchList({commit},params={}){\r\n        // 当前增reqGetSearchInfo这个函数在调用服务器数据的时候，至少传递一个参数（空对象）\r\n        // params形参：是当前用户派发action的时候，在二个参数传递过来的，至少是一个空对象\r\n       let result = await reqGetSearchInfo(params)\r\n       if(result.code==200){\r\n        commit('GETSEARCHLIST',result.data)\r\n       }\r\n    }\r\n};\r\n// getters:理解为计算属性，用于简化仓库数据，让组件获取仓库的数据更加方便\r\nconst getters ={\r\n    // 当前形参state,当前仓库中的state,并非大仓库中的state\r\n    goodsList(state){\r\n        // state.searchList.goodsList如果服务器数据回来了，没问题是一个数组\r\n        // 假如没有网或者网络不给力state.searchList.goodsList应该返回的是undefined\r\n        // 计算新的属性的属性值至少给人家来一个空数组\r\n        return state.searchList.goodsList||[];\r\n    },\r\n    trademarkList(state){\r\n        return state.searchList.trademarkList||[];\r\n    },\r\n    attrsList(state){\r\n        return state.searchList.attrsList||[];\r\n    }\r\n};\r\nexport default{\r\n    state,mutations,actions,getters\r\n}\r\n"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,OAA/B,C,CACA;AACA;;AACA,MAAMC,KAAK,GAAG;EACV;EACAC,UAAU,EAAC;AAFD,CAAd,C,CAIA;;AACA,MAAMC,SAAS,GAAE;EACbC,aAAa,CAACH,KAAD,EAAOC,UAAP,EAAkB;IAC3BD,KAAK,CAACC,UAAN,GAAiBA,UAAjB;EACH;;AAHY,CAAjB,C,CAKA;;AACA,MAAMG,OAAO,GAAC;EACV;EACA,MAAMC,aAAN,CAAoB;IAACC;EAAD,CAApB,EAA6BC,MAAM,GAAC,EAApC,EAAuC;IACnC;IACA;IACD,IAAIC,MAAM,GAAG,MAAMT,gBAAgB,CAACQ,MAAD,CAAnC;;IACA,IAAGC,MAAM,CAACC,IAAP,IAAa,GAAhB,EAAoB;MACnBH,MAAM,CAAC,eAAD,EAAiBE,MAAM,CAACE,IAAxB,CAAN;IACA;EACH;;AATS,CAAd,C,CAWA;;AACA,MAAMC,OAAO,GAAE;EACX;EACAC,SAAS,CAACZ,KAAD,EAAO;IACZ;IACA;IACA;IACA,OAAOA,KAAK,CAACC,UAAN,CAAiBW,SAAjB,IAA4B,EAAnC;EACH,CAPU;;EAQXC,aAAa,CAACb,KAAD,EAAO;IAChB,OAAOA,KAAK,CAACC,UAAN,CAAiBY,aAAjB,IAAgC,EAAvC;EACH,CAVU;;EAWXC,SAAS,CAACd,KAAD,EAAO;IACZ,OAAOA,KAAK,CAACC,UAAN,CAAiBa,SAAjB,IAA4B,EAAnC;EACH;;AAbU,CAAf;AAeA,eAAc;EACVd,KADU;EACJE,SADI;EACME,OADN;EACcO;AADd,CAAd"},"metadata":{},"sourceType":"module"}