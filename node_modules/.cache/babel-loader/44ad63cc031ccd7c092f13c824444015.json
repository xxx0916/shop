{"ast":null,"code":"// 配置路由\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes'; // 使用插件\n\nVue.use(VueRouter); // 先把VueRouter原型对象的push,先保存一份\n\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace; // 重写push|replace\n// 第一个参数：告诉原来的push,你往哪里跳转（传递哪些参数）\n// 第二个参数：成功回调\n// 第三参数：失败的回调\n// call||apply区别\n// 相同点，都可以调用函数一次，都可以篡改函数的上下文一次（this的指向）\n// 不同点：call与apply传递参数：call传递参数用逗号隔开，apply方法执行，传递数组\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n}; // 配置路由\n\n\nlet router = new VueRouter({\n  // 配置路由\n  routes,\n\n  // 滚动行为\n  scrollBehavior(to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n    // 返回的y=0，代表的滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","routes","use","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","scrollBehavior","to","from","savedPosition","y"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/router/index.js"],"sourcesContent":["// 配置路由\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nimport routes from './routes'\r\n\r\n// 使用插件\r\nVue.use(VueRouter)\r\n\r\n// 先把VueRouter原型对象的push,先保存一份\r\nlet originPush  = VueRouter.prototype.push;\r\nlet originReplace = VueRouter.prototype.replace;\r\n\r\n// 重写push|replace\r\n// 第一个参数：告诉原来的push,你往哪里跳转（传递哪些参数）\r\n// 第二个参数：成功回调\r\n// 第三参数：失败的回调\r\n// call||apply区别\r\n// 相同点，都可以调用函数一次，都可以篡改函数的上下文一次（this的指向）\r\n// 不同点：call与apply传递参数：call传递参数用逗号隔开，apply方法执行，传递数组\r\nVueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve&&reject){\r\n        originPush.call(this,location,resolve,reject);\r\n    }else{\r\n        originPush.call(this,location,()=>{},()=>{})\r\n    }\r\n}\r\nVueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve&&reject){\r\n        originReplace.call(this,location,resolve,reject);\r\n    }else{\r\n        originReplace.call(this,location,()=>{},()=>{})\r\n    }\r\n}\r\n\r\n// 配置路由\r\nlet router = new VueRouter({\r\n    // 配置路由\r\n    routes,\r\n    // 滚动行为\r\n    scrollBehavior (to, from, savedPosition) {\r\n        // return 期望滚动到哪个的位置\r\n        // 返回的y=0，代表的滚动条在最上方\r\n        return {y:0}\r\n      }\r\n})\r\n\r\nexport default router;"],"mappings":"AAAA;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQF,SAAR,E,CAEA;;AACA,IAAIG,UAAU,GAAIH,SAAS,CAACI,SAAV,CAAoBC,IAAtC;AACA,IAAIC,aAAa,GAAGN,SAAS,CAACI,SAAV,CAAoBG,OAAxC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,SAAS,CAACI,SAAV,CAAoBC,IAApB,GAAyB,UAASG,QAAT,EAAkBC,OAAlB,EAA0BC,MAA1B,EAAiC;EACtD,IAAGD,OAAO,IAAEC,MAAZ,EAAmB;IACfP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAqBH,QAArB,EAA8BC,OAA9B,EAAsCC,MAAtC;EACH,CAFD,MAEK;IACDP,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAqBH,QAArB,EAA8B,MAAI,CAAE,CAApC,EAAqC,MAAI,CAAE,CAA3C;EACH;AACJ,CAND;;AAOAR,SAAS,CAACI,SAAV,CAAoBC,IAApB,GAAyB,UAASG,QAAT,EAAkBC,OAAlB,EAA0BC,MAA1B,EAAiC;EACtD,IAAGD,OAAO,IAAEC,MAAZ,EAAmB;IACfJ,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAwBH,QAAxB,EAAiCC,OAAjC,EAAyCC,MAAzC;EACH,CAFD,MAEK;IACDJ,aAAa,CAACK,IAAd,CAAmB,IAAnB,EAAwBH,QAAxB,EAAiC,MAAI,CAAE,CAAvC,EAAwC,MAAI,CAAE,CAA9C;EACH;AACJ,CAND,C,CAQA;;;AACA,IAAII,MAAM,GAAG,IAAIZ,SAAJ,CAAc;EACvB;EACAC,MAFuB;;EAGvB;EACAY,cAAc,CAAEC,EAAF,EAAMC,IAAN,EAAYC,aAAZ,EAA2B;IACrC;IACA;IACA,OAAO;MAACC,CAAC,EAAC;IAAH,CAAP;EACD;;AARoB,CAAd,CAAb;AAWA,eAAeL,MAAf"},"metadata":{},"sourceType":"module"}