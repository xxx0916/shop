{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: 'ShopCart',\n\n  mounted() {\n    this.getData();\n  },\n\n  methods: {\n    // 获取个人购物车数据\n    getData() {\n      this.$store.dispatch('getCartList');\n    },\n\n    // 修改购物车中购买某一商品的个数[节流]\n    handler: throttle(async function (type, disNum, cart) {\n      // type:为了区分这三个元素\n      // disNum形参：+变化量（1） -变化量（-1） input最终的个数（并不是变化量）\n      // cart:哪一个产品[身上有id]\n      // 向服务器发请求，修改数量\n      switch (type) {\n        // 加号\n        case \"add\":\n          disNum = 1;\n          break;\n\n        case \"minus\":\n          // 判断产品的个数大于1，才可以传递给服务器-1\n          // 如果出现产品的个数小于大于1，传递给服务器个数0（原封不动）\n          disNum = cart.skuNum > 1 ? -1 : 0;\n          break;\n\n        case \"change\":\n          // 用户输入进来的最终量，非法的（带有汉字|出现负数），带给服务器数字零\n          if (isNaN(disNum) || disNum < 1) {\n            disNum = 0;\n          } else {\n            // 属于正常情况（小数：取证），带给服务器变化的量 用户输入进来 - 产品的起始个数\n            disNum = parseInt(disNum) - cart.skuNum;\n          } // disNum = (isNaN(disNum)||disNum<1)?0:parseInt(disNum) - cart.skuNum;\n\n\n          break;\n      } // 派发action\n\n\n      try {\n        // 代表的是修改成功\n        await this.$store.dispatch('addOrUpdateShopCart', {\n          skuId: cart.skuId,\n          skuNum: disNum\n        }); // 发请求\n\n        this.getData();\n      } catch (error) {}\n    }, 1000),\n\n    // 删除某一个商品的操作\n    async deleteCartById(cart) {\n      try {\n        // 成功 再次发请求获取数据\n        await this.$store.dispatch(\"deleteCartListBySkuId\", cart.skuId);\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n\n    // 修改某一个商品的勾选状态\n    async updateChecked(cart, event) {\n      // 带个服务器的参数isChecked，不是布尔值，应该是0|1\n      try {\n        // 修改数据成功，再次获取服务器数据（购物车）\n        let isChecked = event.target.checked ? \"1\" : \"0\";\n        await this.$store.dispatch('UpdateCheckedById', {\n          skuId: cart.skuId,\n          isChecked\n        });\n        this.getData();\n      } catch (error) {\n        // 失败\n        alert(error.message);\n      }\n    },\n\n    // 删除全部选中的商品\n    // 这个回调无法收集有用的信息\n    async deleteAllCheckedCart() {\n      try {\n        // 派发action\n        await this.$store.dispatch(\"deleteAllCheckedCart\"); // 在发请求获取购物车\n\n        this.getData();\n      } catch (error) {}\n    },\n\n    // 修改全部产品的选中状态\n    updateAllCartChecked(event) {\n      try {\n        let isChecked = event.target.checked ? \"1\" : \"0\"; // 派发action\n\n        this.$store.dispatch('updateAllCartIsChecked', isChecked);\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n\n  },\n  computed: { ...mapGetters(['cartList']),\n\n    // 购物车数据\n    cartInfoList() {\n      return this.cartList.cartInfoList || [];\n    },\n\n    // 计算购买产品的总价\n    totalPrice() {\n      let sum = 0;\n      this.cartInfoList.forEach(item => {\n        sum += item.skuNum * item.skuPrice;\n      });\n      return sum;\n    },\n\n    // 全选\n    isAllCheck() {\n      //遍历数组里面的元素  如果isChecked都等于1，返回true 反之有一个不等于1 为false\n      return this.cartInfoList.every(item => item.isChecked == 1);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoEA;AACA;AACA;EACAA,gBADA;;EAEAC;IACA;EACA,CAJA;;EAKAC;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;MACA;MACA;MACA;MACA;QACA;QACA;UACAC;UACA;;QACA;UACA;UACA;UACAA;UACA;;QACA;UACA;UACA;YACAA;UACA,CAFA,MAEA;YACA;YACAA;UACA,CAPA,CAQA;;;UACA;MAnBA,CALA,CA0BA;;;MACA;QACA;QACA;UAAAC;UAAAC;QAAA,GAFA,CAGA;;QACA;MACA,CALA,CAKA,eAEA;IACA,CAnCA,EAmCA,IAnCA,CANA;;IA0CA;IACA;MACA;QACA;QACA;QACA;MACA,CAJA,CAIA;QACAC;MACA;IACA,CAnDA;;IAoDA;IACA;MACA;MACA;QACA;QACA;QACA;UAAAF;UAAAG;QAAA;QACA;MACA,CALA,CAKA;QACA;QACAD;MACA;IACA,CAhEA;;IAiEA;IACA;IACA;MACA;QACA;QACA,mDAFA,CAGA;;QACA;MACA,CALA,CAKA,eAEA;IACA,CA5EA;;IA6EA;IACAE;MACA;QACA,iDADA,CAEA;;QACA;QACA;MACA,CALA,CAKA;QACAF;MACA;IACA;;EAvFA,CALA;EA8FAG,YACA,2BADA;;IAEA;IACAC;MACA;IACA,CALA;;IAMA;IACAC;MACA;MACA;QACAC;MACA,CAFA;MAGA;IACA,CAbA;;IAcA;IACAC;MACA;MACA;IACA;;EAlBA;AA9FA","names":["name","mounted","methods","getData","handler","disNum","skuId","skuNum","alert","isChecked","updateAllCartChecked","computed","cartInfoList","totalPrice","sum","isAllCheck"],"sourceRoot":"src/pages/ShopCart","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <h4>全部商品</h4>\r\n    <div class=\"cart-main\">\r\n      <div class=\"cart-th\">\r\n        <div class=\"cart-th1\">全部</div>\r\n        <div class=\"cart-th2\">商品</div>\r\n        <div class=\"cart-th3\">单价（元）</div>\r\n        <div class=\"cart-th4\">数量</div>\r\n        <div class=\"cart-th5\">小计（元）</div>\r\n        <div class=\"cart-th6\">操作</div>\r\n      </div>\r\n      <div class=\"cart-body\">\r\n        <ul class=\"cart-list\" v-for=\"(cart, index) in cartInfoList\" :key=\"cart.id\">\r\n          <li class=\"cart-list-con1\">\r\n            <input type=\"checkbox\" name=\"chk_list\" :checked=\"cart.isChecked == 1\" @change=\"updateChecked(cart, $event)\">\r\n          </li>\r\n          <li class=\"cart-list-con2\">\r\n            <img :src=\"cart.imgUrl\">\r\n            <div class=\"item-msg\">{{ cart.skuName }}</div>\r\n          </li>\r\n          <li class=\"cart-list-con4\">\r\n            <span class=\"price\">{{ cart.skuPrice }}</span>\r\n          </li>\r\n          <li class=\"cart-list-con5\">\r\n            <a href=\"javascript:void(0)\" class=\"mins\" @click=\"handler('minus', -1, cart)\">-</a>\r\n            <input autocomplete=\"off\" type=\"text\" :value=\"cart.skuNum\" minnum=\"1\" class=\"itxt\"\r\n              @change=\"handler('change', $event.target.value * 1, cart)\">\r\n            <a href=\"javascript:void(0)\" class=\"plus\" @click=\"handler('add', 1, cart)\">+</a>\r\n          </li>\r\n          <li class=\"cart-list-con6\">\r\n            <span class=\"sum\">{{ cart.skuNum * cart.skuPrice }}</span>\r\n          </li>\r\n          <li class=\"cart-list-con7\">\r\n            <a class=\"sindelet\" @click=\"deleteCartById(cart)\">删除</a>\r\n            <br>\r\n            <a href=\"#none\">移到收藏</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-tool\">\r\n      <div class=\"select-all\">\r\n        <input class=\"chooseAll\" type=\"checkbox\" :checked=\"isAllCheck\" @change=\"updateAllCartChecked\">\r\n        <span>全选</span>\r\n      </div>\r\n      <div class=\"option\">\r\n        <a @click=\"deleteAllCheckedCart\">删除选中的商品</a>\r\n        <a href=\"#none\">移到我的关注</a>\r\n        <a href=\"#none\">清除下柜商品</a>\r\n      </div>\r\n      <div class=\"money-box\">\r\n        <div class=\"chosed\">已选择\r\n          <span>0</span>件商品\r\n        </div>\r\n        <div class=\"sumprice\">\r\n          <em>总价（不含运费） ：</em>\r\n          <i class=\"summoney\">{{ totalPrice }}</i>\r\n        </div>\r\n        <div class=\"sumbtn\">\r\n          <a class=\"sum-btn\" href=\"###\" target=\"_blank\">结算</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nimport throttle from 'lodash/throttle'\r\nexport default {\r\n  name: 'ShopCart',\r\n  mounted() {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    // 获取个人购物车数据\r\n    getData() {\r\n      this.$store.dispatch('getCartList');\r\n    },\r\n    // 修改购物车中购买某一商品的个数[节流]\r\n    handler: throttle(async function (type, disNum, cart) {\r\n      // type:为了区分这三个元素\r\n      // disNum形参：+变化量（1） -变化量（-1） input最终的个数（并不是变化量）\r\n      // cart:哪一个产品[身上有id]\r\n      // 向服务器发请求，修改数量\r\n      switch (type) {\r\n        // 加号\r\n        case \"add\":\r\n          disNum = 1;\r\n          break;\r\n        case \"minus\":\r\n          // 判断产品的个数大于1，才可以传递给服务器-1\r\n          // 如果出现产品的个数小于大于1，传递给服务器个数0（原封不动）\r\n          disNum = cart.skuNum > 1 ? -1 : 0;\r\n          break;\r\n        case \"change\":\r\n          // 用户输入进来的最终量，非法的（带有汉字|出现负数），带给服务器数字零\r\n          if (isNaN(disNum) || disNum < 1) {\r\n            disNum = 0;\r\n          } else {\r\n            // 属于正常情况（小数：取证），带给服务器变化的量 用户输入进来 - 产品的起始个数\r\n            disNum = parseInt(disNum) - cart.skuNum\r\n          }\r\n          // disNum = (isNaN(disNum)||disNum<1)?0:parseInt(disNum) - cart.skuNum;\r\n          break;\r\n      }\r\n      // 派发action\r\n      try {\r\n        // 代表的是修改成功\r\n        await this.$store.dispatch('addOrUpdateShopCart', { skuId: cart.skuId, skuNum: disNum })\r\n        // 发请求\r\n        this.getData();\r\n      } catch (error) {\r\n\r\n      }\r\n    }, 1000),\r\n    // 删除某一个商品的操作\r\n    async deleteCartById(cart) {\r\n      try {\r\n        // 成功 再次发请求获取数据\r\n        await this.$store.dispatch(\"deleteCartListBySkuId\", cart.skuId)\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(error.message)\r\n      }\r\n    },\r\n    // 修改某一个商品的勾选状态\r\n    async updateChecked(cart, event) {\r\n      // 带个服务器的参数isChecked，不是布尔值，应该是0|1\r\n      try {\r\n        // 修改数据成功，再次获取服务器数据（购物车）\r\n        let isChecked = event.target.checked ? \"1\" : \"0\";\r\n        await this.$store.dispatch('UpdateCheckedById', { skuId: cart.skuId, isChecked })\r\n        this.getData();\r\n      } catch (error) {\r\n        // 失败\r\n        alert(error.message);\r\n      }\r\n    },\r\n    // 删除全部选中的商品\r\n    // 这个回调无法收集有用的信息\r\n    async deleteAllCheckedCart() {\r\n      try {\r\n        // 派发action\r\n        await this.$store.dispatch(\"deleteAllCheckedCart\")\r\n        // 在发请求获取购物车\r\n        this.getData();\r\n      } catch (error) {\r\n\r\n      }\r\n    },\r\n    // 修改全部产品的选中状态\r\n    updateAllCartChecked(event) {\r\n      try {\r\n        let isChecked = event.target.checked ? \"1\" : \"0\";\r\n        // 派发action\r\n        this.$store.dispatch('updateAllCartIsChecked', isChecked)\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(error.message)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['cartList']),\r\n    // 购物车数据\r\n    cartInfoList() {\r\n      return this.cartList.cartInfoList || [];\r\n    },\r\n    // 计算购买产品的总价\r\n    totalPrice() {\r\n      let sum = 0;\r\n      this.cartInfoList.forEach(item => {\r\n        sum += item.skuNum * item.skuPrice;\r\n      });\r\n      return sum;\r\n    },\r\n    // 全选\r\n    isAllCheck() {\r\n      //遍历数组里面的元素  如果isChecked都等于1，返回true 反之有一个不等于1 为false\r\n      return this.cartInfoList.every(item => item.isChecked == 1);\r\n    }\r\n  }\r\n}\r\n</script>\r\n      \r\n<style lang=\"less\" scoped>\r\n.cart {\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n\r\n  h4 {\r\n    margin: 9px 0;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n  }\r\n\r\n  .cart-main {\r\n    .cart-th {\r\n      background: #f5f5f5;\r\n      border: 1px solid #ddd;\r\n      padding: 10px;\r\n      overflow: hidden;\r\n\r\n      &>div {\r\n        float: left;\r\n      }\r\n\r\n      .cart-th1 {\r\n        width: 25%;\r\n\r\n        input {\r\n          vertical-align: middle;\r\n        }\r\n\r\n        span {\r\n          vertical-align: middle;\r\n        }\r\n      }\r\n\r\n      .cart-th2 {\r\n        width: 25%;\r\n      }\r\n\r\n      .cart-th3,\r\n      .cart-th4,\r\n      .cart-th5,\r\n      .cart-th6 {\r\n        width: 12.5%;\r\n\r\n      }\r\n    }\r\n\r\n    .cart-body {\r\n      margin: 15px 0;\r\n      border: 1px solid #ddd;\r\n\r\n      .cart-list {\r\n        padding: 10px;\r\n        border-bottom: 1px solid #ddd;\r\n        overflow: hidden;\r\n\r\n        &>li {\r\n          float: left;\r\n        }\r\n\r\n        .cart-list-con1 {\r\n          width: 15%;\r\n        }\r\n\r\n        .cart-list-con2 {\r\n          width: 35%;\r\n\r\n          img {\r\n            width: 82px;\r\n            height: 82px;\r\n            float: left;\r\n          }\r\n\r\n          .item-msg {\r\n            float: left;\r\n            width: 150px;\r\n            margin: 0 10px;\r\n            line-height: 18px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con4 {\r\n          width: 10%;\r\n\r\n        }\r\n\r\n        .cart-list-con5 {\r\n          width: 17%;\r\n\r\n          .mins {\r\n            border: 1px solid #ddd;\r\n            border-right: 0;\r\n            float: left;\r\n            color: #666;\r\n            width: 6px;\r\n            text-align: center;\r\n            padding: 8px;\r\n          }\r\n\r\n          input {\r\n            border: 1px solid #ddd;\r\n            width: 40px;\r\n            height: 32px;\r\n            float: left;\r\n            text-align: center;\r\n            font-size: 14px;\r\n          }\r\n\r\n          .plus {\r\n            border: 1px solid #ddd;\r\n            border-left: 0;\r\n            float: left;\r\n            color: #666;\r\n            width: 6px;\r\n            text-align: center;\r\n            padding: 8px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con6 {\r\n          width: 10%;\r\n\r\n          .sum {\r\n            font-size: 16px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con7 {\r\n          width: 13%;\r\n\r\n          a {\r\n            color: #666;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .cart-tool {\r\n    overflow: hidden;\r\n    border: 1px solid #ddd;\r\n\r\n    .select-all {\r\n      padding: 10px;\r\n      overflow: hidden;\r\n      float: left;\r\n\r\n      span {\r\n        vertical-align: middle;\r\n      }\r\n\r\n      input {\r\n        vertical-align: middle;\r\n      }\r\n    }\r\n\r\n    .option {\r\n      padding: 10px;\r\n      overflow: hidden;\r\n      float: left;\r\n\r\n      a {\r\n        float: left;\r\n        padding: 0 10px;\r\n        color: #666;\r\n      }\r\n    }\r\n\r\n    .money-box {\r\n      float: right;\r\n\r\n      .chosed {\r\n        line-height: 26px;\r\n        float: left;\r\n        padding: 0 10px;\r\n      }\r\n\r\n      .sumprice {\r\n        width: 200px;\r\n        line-height: 22px;\r\n        float: left;\r\n        padding: 0 10px;\r\n\r\n        .summoney {\r\n          color: #c81623;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n\r\n      .sumbtn {\r\n        float: right;\r\n\r\n        a {\r\n          display: block;\r\n          position: relative;\r\n          width: 96px;\r\n          height: 52px;\r\n          line-height: 52px;\r\n          color: #fff;\r\n          text-align: center;\r\n          font-size: 18px;\r\n          font-family: \"Microsoft YaHei\";\r\n          background: #e1251b;\r\n          overflow: hidden;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}