{"ast":null,"code":"import ImageList from './ImageList/ImageList';\nimport Zoom from './Zoom/Zoom';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Detail',\n  components: {\n    ImageList,\n    Zoom\n  },\n\n  data() {\n    return {\n      // 购买产品的个数\n      skuNum: 1\n    };\n  },\n\n  mounted() {\n    // 派发action获取产品详情的信息\n    this.$store.dispatch('getGoodInfo', this.$route.params.skuid);\n  },\n\n  computed: { ...mapGetters(['categoryView', 'skuInfo', 'spuSaleAttrList']),\n\n    // 给子组件的数据\n    skuImageList() {\n      // 如果服务器的数据没有回来，skuImageList这个是一个空对象\n      return this.skuInfo.skuImageList || [];\n    }\n\n  },\n  methods: {\n    // 产品的售卖属性值切换高亮\n    changeActive(saleAttrValue, arr) {\n      // 遍历全部售卖属性值isChecked为零没有高亮了\n      arr.forEach(item => {\n        item.isChecked = 0;\n      }); // 点击的那个售卖属性值\n\n      saleAttrValue.isChecked = 1;\n    },\n\n    // 表单元素修改购买商品的个数\n    changeSkuNum(event) {\n      // 用户输入进来的文本 * 1\n      let value = event.target.value * 1; // 如果用户输入进来的非法，出现NaN或者小于1\n\n      if (isNaN(value) || value < 1) {\n        this.skuNum = 1;\n      } else {\n        // 正常大于1 但是不能出现小数\n        this.skuNum = parseInt(value);\n      }\n    },\n\n    // 加入购物车\n    async addShopcar() {\n      // 1:发请求--将产品加入到数据库（通知服务器）\n      // 2：服务器存储成功--进行路由跳转传递参数\n      // 3：失败,给用户进行提示\n\n      /* \r\n        当前这里派发一个action,也想服务器请求，判断加入购物车是成功还是失败了，进行相应的操作\r\n      this.$store.dispatch('addOrUpdateShopCart',{skuId:this.$route.params.skuid,skuNum:this.skuNum})\r\n      上面这行代码说白了：调用仓库中的addOrUpdateShopCart，这个方法加上asyc,返回的一定是一个Promise\r\n      要么成功||要么失败\r\n      */\n      try {\n        await this.$store.dispatch('addOrUpdateShopCart', {\n          skuId: this.$route.params.skuid,\n          skuNum: this.skuNum\n        }); //  路由跳转\n        // 在路由跳转的时候还需要将产品的信息带给下一级的路由组件\n        // 一些简单的数据skuNum,通过query形式给路由组件传递过去\n        // 产品信息的数据【比较复杂：skuInfo】，通过会话存储（不持久化，会话结束数据在消失）\n        // 本地存储|会话存储，一般存储的是字符串\n\n        sessionStorage.setItem(\"SKUINFO\", JSON.stringify(this.skuInfo));\n        this.$router.push({\n          name: 'addcartsuccess',\n          query: {\n            skuNum: this.skuNum\n          }\n        });\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}