{"ast":null,"code":"// 配置路由\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes'; // 使用插件\n\nVue.use(VueRouter); // 引入store\n\nimport store from '@/store'; // 先把VueRouter原型对象的push,先保存一份\n\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace; // 重写push|replace\n// 第一个参数：告诉原来的push,你往哪里跳转（传递哪些参数）\n// 第二个参数：成功回调\n// 第三参数：失败的回调\n// call||apply区别\n// 相同点，都可以调用函数一次，都可以篡改函数的上下文一次（this的指向）\n// 不同点：call与apply传递参数：call传递参数用逗号隔开，apply方法执行，传递数组\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n}; // 配置路由\n\n\nlet router = new VueRouter({\n  // 配置路由\n  routes,\n\n  // 滚动行为\n  scrollBehavior(to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n    // 返回的y=0，代表的滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n\n}); // 全局守卫：前置守卫（在路由跳转之间进行判断）\n\nrouter.beforeEach(async (to, from, next) => {\n  // to:可以获取你要跳转到哪个路由信息\n  // from:可以获取你从哪个路由而来的信息\n  // next:放行函数 next()放行  next('/login')指定放行位置  next(false)\n  // next();\n  // 用户登录，才会有token，为登录一定不会有token\n  let token = store.state.user.token; // 用户民信息\n\n  let name = store.state.user.userInfo.name; // 用户已经登录了\n\n  if (token) {\n    // 用户登录后无法去login\n    if (to.path == '/login') {\n      next('/home');\n    } else {\n      // 登录了，去的不是login[home|search|detail|shopcart]\n      // 如果用户名已有\n      if (name) {\n        next();\n      } else {\n        // 没有用户信息，派发action让仓库存储用户信息在跳转\n        try {\n          // 获取用户信息成功\n          await store.dispatch('getUserInfo'); // 放行\n\n          next();\n        } catch (error) {\n          // token失效了获取不到用户信息，重新登录\n          // 清除token\n          await store.dispatch('userLogout');\n          next('/login');\n        }\n      }\n    }\n  } else {\n    // 未登录不能去购物车，交易，支付【pay|paysuccess】，个人中心这些页面，\n    // 应该跳转到登录页面  其他页面放行（home|search)\n    let toPath = to.path;\n\n    if (toPath.indexOf('/trade') != -1 || toPath.indexOf('/pay') != -1 || toPath.indexOf('/shopcart') != -1 || toPath.indexOf('/center') != -1) {\n      // 把未登录的时候要去的而没去成的信息，存储于地址栏中【路由】\n      next('/login?redirect=' + toPath);\n    } else {\n      // 其他页面放行（home|search)\n      next();\n    }\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}