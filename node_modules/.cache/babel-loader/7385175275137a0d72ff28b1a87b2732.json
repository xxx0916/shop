{"ast":null,"code":"import { reqCategoryList, reqGetBannerList, reqFloorList } from '@/api'; // home模块的小仓库\n// state:仓库存储数据的地方\n\nconst state = {\n  // state中的数据默认初始值别瞎写，服务器返回对象服务器返回数组。【根据接口返回值初始化的】\n  categoryList: [],\n  // 轮播图的数据\n  bannerList: [],\n  // floor轮播图数数据\n  floorList: []\n}; // mutations:修改state的唯一手段\n\nconst mutations = {\n  CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n\n  GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n\n  GETFLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n\n}; // action:处理action,可以书写自己的业务逻辑，也可以吃了异步\n\nconst actions = {\n  // 通过API里面的接口函数调用，向服务器发请求，获取服务器的数据\n  async categoryList({\n    commit\n  }) {\n    let result = await reqCategoryList();\n\n    if (result.code == 200) {\n      commit(\"CATEGORYLIST\", result.data);\n    }\n  },\n\n  // 获取首页轮播图的数据\n  async getBannerList({\n    commit\n  }) {\n    let result = await reqGetBannerList();\n\n    if (result.code == 200) {\n      commit('GETBANNERLIST', result.data);\n    }\n  },\n\n  // 获取floor数据\n  async getFloorList({\n    commit\n  }) {\n    let result = await reqFloorList();\n\n    if (result.code == 200) {\n      commit('GETFLOORLIST', result.data);\n    }\n  }\n\n}; // getters:理解为计算属性，用于简化仓库数据，让组件获取仓库的数据更加方便\n\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}