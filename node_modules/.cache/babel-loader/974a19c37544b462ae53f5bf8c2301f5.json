{"ast":null,"code":"// 引入路由组件\n// import Home from '@/pages/Home'\n// import Login from '@/pages/Login'\n// import Register from '@/pages/Register'\n// import Search from '@/pages/Search'\n// import Detail from '@/pages/Detail'\n// import AddCartSuccess from \"@/pages/AddCartSuccess\";\n// import ShopCart from '@/pages/ShopCart';\n// import Trade from '@/pages/Trade';\n// import Pay from '@/pages/Pay';\n// import PaySuccess from '@/pages/PaySuccess'\n// import Center from '@/pages/Center'\n// 引入二级路由\n// import MyOrder from '@/pages/Center/myOrder'\n// import GroupOrder from '@/pages/Center/groupOrder'\n\n/* 路由懒加载\r\n当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。\r\n如果我们能把不同路由对应的组件分割成不同的代码块，\r\n然后当路由被访问的时候才加载对应组件，这样就更加高效了。\r\n*/\nconst foo = () => import('@/pages/Home'); // 路由配置信息\n\n\nexport default [// 路由重定向，在项目跑起来的时候，默认访问首页\n{\n  path: '*',\n  redirect: '/home'\n}, {\n  path: \"/home\",\n  component: foo,\n  meta: {\n    show: true\n  }\n}, {\n  path: \"/search/:keyword?\",\n  //路由懒加载简写\n  component: () => import('@/pages/Search'),\n  meta: {\n    show: true\n  },\n  name: 'search',\n  // 路由组件能不能传递props数据?\n  // 布尔值写法：params\n  // props:true\n  // 对象写法:额外给路由组件传递一些props\n  // props:{a:1,b:2}\n  // 函数写法：可以params参数，query参数，通过props传递给路由组件\n  props: $route => {\n    return {\n      keyword: $route.params.keyword,\n      k: $route.query.k\n    };\n  }\n}, {\n  path: \"/login\",\n  component: () => import('@/pages/Login'),\n  meta: {\n    show: false\n  }\n}, {\n  path: \"/register\",\n  component: () => import('@/pages/Register'),\n  meta: {\n    show: false\n  }\n}, {\n  path: \"/detail/:skuid\",\n  component: () => import('@/pages/Detail'),\n  meta: {\n    show: true\n  }\n}, {\n  path: \"/addcartsuccess\",\n  name: 'addcartsuccess',\n  component: () => import('@/pages/AddCartSuccess'),\n  meta: {\n    show: true\n  }\n}, {\n  path: \"/shopcart\",\n  name: 'shopcart',\n  component: () => import('@/pages/ShopCart'),\n  meta: {\n    show: true\n  }\n}, {\n  path: \"/trade\",\n  name: 'trade',\n  component: () => import('@/pages/Trade'),\n  meta: {\n    show: true\n  },\n  // 路由独享守卫\n  beforeEnter: (to, from, next) => {\n    // 去交易页面，必须从购物车页面来\n    if (from.path == '/shopcart') {\n      next();\n    } else {\n      // 其他的组件而来，停留在当前页\n      next(false);\n    }\n  }\n}, {\n  path: \"/pay\",\n  name: 'pay',\n  component: () => import('@/pages/Pay'),\n  meta: {\n    show: true\n  },\n  beforeEnter: (to, from, next) => {\n    // ...\n    if (from.path == '/trade') {\n      next();\n    } else {\n      next(false);\n    }\n  }\n}, {\n  path: \"/paysuccess\",\n  name: 'paysuccess',\n  component: () => import('@/pages/PaySuccess'),\n  meta: {\n    show: true\n  }\n}, {\n  path: \"/center\",\n  name: 'center',\n  component: () => import('@/pages/Center'),\n  meta: {\n    show: true\n  },\n  // 二级路由组件\n  children: [{\n    path: 'myorder',\n    component: MyOrder\n  }, {\n    path: 'grouporder',\n    component: GroupOrder\n  }, // 路由重定向\n  {\n    path: '/center',\n    redirect: '/center/myorder'\n  }]\n}];","map":{"version":3,"names":["foo","path","redirect","component","meta","show","name","props","$route","keyword","params","k","query","beforeEnter","to","from","next","children","MyOrder","GroupOrder"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/router/routes.js"],"sourcesContent":["// 引入路由组件\r\n// import Home from '@/pages/Home'\r\n// import Login from '@/pages/Login'\r\n// import Register from '@/pages/Register'\r\n// import Search from '@/pages/Search'\r\n// import Detail from '@/pages/Detail'\r\n// import AddCartSuccess from \"@/pages/AddCartSuccess\";\r\n// import ShopCart from '@/pages/ShopCart';\r\n// import Trade from '@/pages/Trade';\r\n// import Pay from '@/pages/Pay';\r\n// import PaySuccess from '@/pages/PaySuccess'\r\n// import Center from '@/pages/Center'\r\n// 引入二级路由\r\n// import MyOrder from '@/pages/Center/myOrder'\r\n// import GroupOrder from '@/pages/Center/groupOrder'\r\n\r\n/* 路由懒加载\r\n当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。\r\n如果我们能把不同路由对应的组件分割成不同的代码块，\r\n然后当路由被访问的时候才加载对应组件，这样就更加高效了。\r\n*/\r\nconst foo=()=>import ('@/pages/Home')\r\n\r\n// 路由配置信息\r\nexport default [\r\n    // 路由重定向，在项目跑起来的时候，默认访问首页\r\n    {\r\n        path: '*',\r\n        redirect: '/home'\r\n    },\r\n    {\r\n        path: \"/home\",\r\n        component: foo,\r\n        meta: { show: true }\r\n    },\r\n    {\r\n        path: \"/search/:keyword?\",\r\n        //路由懒加载简写\r\n        component: ()=>import('@/pages/Search'),\r\n        meta: { show: true },\r\n        name: 'search',\r\n        // 路由组件能不能传递props数据?\r\n        // 布尔值写法：params\r\n        // props:true\r\n        // 对象写法:额外给路由组件传递一些props\r\n        // props:{a:1,b:2}\r\n        // 函数写法：可以params参数，query参数，通过props传递给路由组件\r\n        props: ($route) => {\r\n            return { keyword: $route.params.keyword, k: $route.query.k }\r\n        }\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: ()=>import('@/pages/Login'),\r\n        meta: { show: false }\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        component: ()=>import('@/pages/Register'),\r\n        meta: { show: false }\r\n    },\r\n    {\r\n        path: \"/detail/:skuid\",\r\n        component: ()=>import('@/pages/Detail'),\r\n        meta: { show: true }\r\n    },\r\n    {\r\n        path: \"/addcartsuccess\",\r\n        name: 'addcartsuccess',\r\n        component: ()=>import('@/pages/AddCartSuccess'),\r\n        meta: { show: true }\r\n    },\r\n    {\r\n        path: \"/shopcart\",\r\n        name: 'shopcart',\r\n        component: ()=>import('@/pages/ShopCart'),\r\n        meta: { show: true }\r\n    },\r\n    {\r\n        path: \"/trade\",\r\n        name: 'trade',\r\n        component: ()=>import('@/pages/Trade'),\r\n        meta: { show: true },\r\n        // 路由独享守卫\r\n        beforeEnter: (to, from, next) => {\r\n            // 去交易页面，必须从购物车页面来\r\n            if (from.path == '/shopcart') {\r\n                next()\r\n            } else {\r\n                // 其他的组件而来，停留在当前页\r\n                next(false)\r\n            }\r\n        }\r\n    },\r\n    {\r\n        path: \"/pay\",\r\n        name: 'pay',\r\n        component: ()=>import('@/pages/Pay'),\r\n        meta: { show: true },\r\n        beforeEnter: (to, from, next) => {\r\n            // ...\r\n            if (from.path == '/trade') {\r\n                next()\r\n            } else {\r\n                next(false)\r\n            }\r\n        }\r\n    },\r\n    {\r\n        path: \"/paysuccess\",\r\n        name: 'paysuccess',\r\n        component: ()=>import('@/pages/PaySuccess'),\r\n        meta: { show: true }\r\n    },\r\n    {\r\n        path: \"/center\",\r\n        name: 'center',\r\n        component: ()=>import('@/pages/Center'),\r\n        meta: { show: true },\r\n        // 二级路由组件\r\n        children: [\r\n            {\r\n                path: 'myorder',\r\n                component: MyOrder,\r\n            },\r\n            {\r\n                path: 'grouporder',\r\n                component: GroupOrder\r\n            },\r\n            // 路由重定向\r\n            {\r\n                path: '/center',\r\n                redirect: '/center/myorder'\r\n            }\r\n        ]\r\n    },\r\n]"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,GAAG,GAAC,MAAI,OAAQ,cAAR,CAAd,C,CAEA;;;AACA,eAAe,CACX;AACA;EACIC,IAAI,EAAE,GADV;EAEIC,QAAQ,EAAE;AAFd,CAFW,EAMX;EACID,IAAI,EAAE,OADV;EAEIE,SAAS,EAAEH,GAFf;EAGII,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAHV,CANW,EAWX;EACIJ,IAAI,EAAE,mBADV;EAEI;EACAE,SAAS,EAAE,MAAI,OAAO,gBAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR,CAJV;EAKIC,IAAI,EAAE,QALV;EAMI;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAGC,MAAD,IAAY;IACf,OAAO;MAAEC,OAAO,EAAED,MAAM,CAACE,MAAP,CAAcD,OAAzB;MAAkCE,CAAC,EAAEH,MAAM,CAACI,KAAP,CAAaD;IAAlD,CAAP;EACH;AAdL,CAXW,EA2BX;EACIV,IAAI,EAAE,QADV;EAEIE,SAAS,EAAE,MAAI,OAAO,eAAP,CAFnB;EAGIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAHV,CA3BW,EAgCX;EACIJ,IAAI,EAAE,WADV;EAEIE,SAAS,EAAE,MAAI,OAAO,kBAAP,CAFnB;EAGIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAHV,CAhCW,EAqCX;EACIJ,IAAI,EAAE,gBADV;EAEIE,SAAS,EAAE,MAAI,OAAO,gBAAP,CAFnB;EAGIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAHV,CArCW,EA0CX;EACIJ,IAAI,EAAE,iBADV;EAEIK,IAAI,EAAE,gBAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,wBAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAJV,CA1CW,EAgDX;EACIJ,IAAI,EAAE,WADV;EAEIK,IAAI,EAAE,UAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,kBAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAJV,CAhDW,EAsDX;EACIJ,IAAI,EAAE,QADV;EAEIK,IAAI,EAAE,OAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,eAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR,CAJV;EAKI;EACAQ,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;IAC7B;IACA,IAAID,IAAI,CAACd,IAAL,IAAa,WAAjB,EAA8B;MAC1Be,IAAI;IACP,CAFD,MAEO;MACH;MACAA,IAAI,CAAC,KAAD,CAAJ;IACH;EACJ;AAdL,CAtDW,EAsEX;EACIf,IAAI,EAAE,MADV;EAEIK,IAAI,EAAE,KAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,aAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR,CAJV;EAKIQ,WAAW,EAAE,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;IAC7B;IACA,IAAID,IAAI,CAACd,IAAL,IAAa,QAAjB,EAA2B;MACvBe,IAAI;IACP,CAFD,MAEO;MACHA,IAAI,CAAC,KAAD,CAAJ;IACH;EACJ;AAZL,CAtEW,EAoFX;EACIf,IAAI,EAAE,aADV;EAEIK,IAAI,EAAE,YAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,oBAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR;AAJV,CApFW,EA0FX;EACIJ,IAAI,EAAE,SADV;EAEIK,IAAI,EAAE,QAFV;EAGIH,SAAS,EAAE,MAAI,OAAO,gBAAP,CAHnB;EAIIC,IAAI,EAAE;IAAEC,IAAI,EAAE;EAAR,CAJV;EAKI;EACAY,QAAQ,EAAE,CACN;IACIhB,IAAI,EAAE,SADV;IAEIE,SAAS,EAAEe;EAFf,CADM,EAKN;IACIjB,IAAI,EAAE,YADV;IAEIE,SAAS,EAAEgB;EAFf,CALM,EASN;EACA;IACIlB,IAAI,EAAE,SADV;IAEIC,QAAQ,EAAE;EAFd,CAVM;AANd,CA1FW,CAAf"},"metadata":{},"sourceType":"module"}