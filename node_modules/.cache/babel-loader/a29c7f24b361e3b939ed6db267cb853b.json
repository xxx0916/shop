{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid'; // 要生成一个随机的字符串，且每次执行不能发生变化，游客身份持久存储\n\nexport const getUUID = () => {\n  // 先从本地存储获取uuid(看一下本地存储里面是否有)\n  let uuid_token = localStorage.getItem('UUIDTOKEN'); // 如果没有\n\n  if (!uuid_token) {\n    // 生成游客临时身份\n    uuid_token = uuidv4(); // 本地存储存储一次\n\n    localStorage.setItem('UUIDTOKEN', uuid_token);\n  }\n\n  return uuid_token;\n};","map":{"version":3,"names":["v4","uuidv4","getUUID","uuid_token","localStorage","getItem","setItem"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/utils/uuid_token.js"],"sourcesContent":["import {v4 as uuidv4} from 'uuid'\r\n// 要生成一个随机的字符串，且每次执行不能发生变化，游客身份持久存储\r\nexport const getUUID=()=>{\r\n    // 先从本地存储获取uuid(看一下本地存储里面是否有)\r\n    let uuid_token = localStorage.getItem('UUIDTOKEN');\r\n    // 如果没有\r\n    if(!uuid_token){\r\n        // 生成游客临时身份\r\n        uuid_token = uuidv4();\r\n        // 本地存储存储一次\r\n        localStorage.setItem('UUIDTOKEN',uuid_token);\r\n    }\r\n    return uuid_token\r\n}"],"mappings":"AAAA,SAAQA,EAAE,IAAIC,MAAd,QAA2B,MAA3B,C,CACA;;AACA,OAAO,MAAMC,OAAO,GAAC,MAAI;EACrB;EACA,IAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB,CAFqB,CAGrB;;EACA,IAAG,CAACF,UAAJ,EAAe;IACX;IACAA,UAAU,GAAGF,MAAM,EAAnB,CAFW,CAGX;;IACAG,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAiCH,UAAjC;EACH;;EACD,OAAOA,UAAP;AACH,CAXM"},"metadata":{},"sourceType":"module"}