{"ast":null,"code":"// 配置路由\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from './routes'; // 使用插件\n\nVue.use(VueRouter); // 引入store\n\nimport store from '@/store'; // 先把VueRouter原型对象的push,先保存一份\n\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace; // 重写push|replace\n// 第一个参数：告诉原来的push,你往哪里跳转（传递哪些参数）\n// 第二个参数：成功回调\n// 第三参数：失败的回调\n// call||apply区别\n// 相同点，都可以调用函数一次，都可以篡改函数的上下文一次（this的指向）\n// 不同点：call与apply传递参数：call传递参数用逗号隔开，apply方法执行，传递数组\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n}; // 配置路由\n\n\nlet router = new VueRouter({\n  // 配置路由\n  routes,\n\n  // 滚动行为\n  scrollBehavior(to, from, savedPosition) {\n    // return 期望滚动到哪个的位置\n    // 返回的y=0，代表的滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n\n}); // 全局守卫：前置守卫（在路由跳转之间进行判断）\n\nrouter.beforeEach(async (to, from, next) => {\n  // to:可以获取你要跳转到哪个路由信息\n  // from:可以获取你从哪个路由而来的信息\n  // next:放行函数 next()放行  next('/login')指定放行位置  next(false)\n  // next();\n  // 用户登录，才会有token，为登录一定不会有token\n  let token = store.state.user.token; // 用户民信息\n\n  let name = store.state.user.userInfo.name; // 用户已经登录了\n\n  if (token) {\n    // 用户登录后无法去login\n    if (to.path == '/login') {\n      next('/home');\n    } else {\n      // 登录了，去的不是login[home|search|detail|shopcart]\n      // 如果用户名已有\n      if (name) {\n        next();\n      } else {\n        // 没有用户信息，派发action让仓库存储用户信息在跳转\n        try {\n          // 获取用户信息成功\n          await store.dispatch('getUserInfo'); // 放行\n\n          next();\n        } catch (error) {\n          // token失效了获取不到用户信息，重新登录\n          // 清除token\n          await store.dispatch('userLogout');\n          next('/login');\n        }\n      }\n    }\n  } else {\n    // 未登录不能去购物车，交易，支付【pay|paysuccess】，个人中心这些页面，\n    // 应该跳转到登录页面  其他页面放行（home|search)\n    let toPath = to.path;\n\n    if (toPath.indexOf('/trade') != -1 || toPath.indexOf('/pay') != -1 || toPath.indexOf('/shopcart')) {\n      next('/login');\n    } else {\n      // 其他页面放行（home|search)\n      next();\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","routes","use","store","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","scrollBehavior","to","from","savedPosition","y","beforeEach","next","token","state","user","name","userInfo","path","dispatch","error","toPath","indexOf"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/router/index.js"],"sourcesContent":["// 配置路由\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nimport routes from './routes'\r\n\r\n// 使用插件\r\nVue.use(VueRouter)\r\n\r\n// 引入store\r\nimport store from '@/store'\r\n\r\n// 先把VueRouter原型对象的push,先保存一份\r\nlet originPush  = VueRouter.prototype.push;\r\nlet originReplace = VueRouter.prototype.replace;\r\n\r\n// 重写push|replace\r\n// 第一个参数：告诉原来的push,你往哪里跳转（传递哪些参数）\r\n// 第二个参数：成功回调\r\n// 第三参数：失败的回调\r\n// call||apply区别\r\n// 相同点，都可以调用函数一次，都可以篡改函数的上下文一次（this的指向）\r\n// 不同点：call与apply传递参数：call传递参数用逗号隔开，apply方法执行，传递数组\r\nVueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve&&reject){\r\n        originPush.call(this,location,resolve,reject);\r\n    }else{\r\n        originPush.call(this,location,()=>{},()=>{})\r\n    }\r\n}\r\nVueRouter.prototype.push=function(location,resolve,reject){\r\n    if(resolve&&reject){\r\n        originReplace.call(this,location,resolve,reject);\r\n    }else{\r\n        originReplace.call(this,location,()=>{},()=>{})\r\n    }\r\n}\r\n\r\n// 配置路由\r\nlet router = new VueRouter({\r\n    // 配置路由\r\n    routes,\r\n    // 滚动行为\r\n    scrollBehavior (to, from, savedPosition) {\r\n        // return 期望滚动到哪个的位置\r\n        // 返回的y=0，代表的滚动条在最上方\r\n        return {y:0}\r\n      }\r\n})\r\n\r\n// 全局守卫：前置守卫（在路由跳转之间进行判断）\r\nrouter.beforeEach(async (to,from,next)=>{\r\n    // to:可以获取你要跳转到哪个路由信息\r\n    // from:可以获取你从哪个路由而来的信息\r\n    // next:放行函数 next()放行  next('/login')指定放行位置  next(false)\r\n    // next();\r\n    // 用户登录，才会有token，为登录一定不会有token\r\n    let token = store.state.user.token;\r\n    // 用户民信息\r\n    let name=store.state.user.userInfo.name;\r\n    // 用户已经登录了\r\n    if(token){\r\n        // 用户登录后无法去login\r\n        if(to.path=='/login'){\r\n            next('/home')\r\n        }else{\r\n            // 登录了，去的不是login[home|search|detail|shopcart]\r\n            // 如果用户名已有\r\n            if(name){\r\n                next()\r\n            }else{\r\n                // 没有用户信息，派发action让仓库存储用户信息在跳转\r\n              try {\r\n                // 获取用户信息成功\r\n                await store.dispatch('getUserInfo')\r\n                // 放行\r\n                next();\r\n              } catch (error) {\r\n                // token失效了获取不到用户信息，重新登录\r\n                // 清除token\r\n                await store.dispatch('userLogout');\r\n                next('/login')\r\n              }\r\n            }\r\n            \r\n        }\r\n    }else{\r\n        // 未登录不能去购物车，交易，支付【pay|paysuccess】，个人中心这些页面，\r\n        // 应该跳转到登录页面  其他页面放行（home|search)\r\n        let toPath=to.path\r\n        if(toPath.indexOf('/trade')!=-1||toPath.indexOf('/pay')!=-1||toPath.indexOf('/shopcart')){\r\n            next('/login')\r\n        }else{\r\n            // 其他页面放行（home|search)\r\n            next()\r\n        }\r\n    }\r\n})\r\n\r\nexport default router;"],"mappings":"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"},"metadata":{},"sourceType":"module"}