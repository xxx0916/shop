{"ast":null,"code":"export default {\n  data() {\n    return {\n      keyword: ''\n    };\n  },\n\n  methods: {\n    // 搜索按钮的回调函数：向search路由进行跳转\n    goSearch() {\n      // 路由传递参数\n      // 第一种：字符串形式\n      // this.$router.push(\"/search/\"+this.keyword+\"?k=\"+this.keyword.toUpperCase())\n      // 第二周：模板字符串\n      // this.$router.push(`/search/${this.keyword}?k=${this.keyword.toUpperCase()}`)\n      // 第三种：对象写法\n      // 代表的是如果有query参数也带过去\n      if (this.$route.query) {\n        let location = {\n          name: 'search',\n          params: {\n            keyword: this.keyword || undefined\n          }\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n\n    // 退出登录\n    async logout() {\n      // 1.发请求，通知服务器退出登录【清除一些数据：token】\n      // 2.清除项目当中的数据（userInfo,token)\n      try {\n        // 退出成功\n        await this.$store.dispatch(\"userLogout\"); //  跳转到首页\n\n        this.$router.push('/home');\n      } catch (error) {}\n    }\n\n  },\n\n  mounted() {\n    // 通过全局事件总线清除关键字\n    this.$bus.$on('clear', () => {\n      this.keyword = '';\n    });\n  },\n\n  computed: {\n    // 用户名信息\n    userName() {\n      return this.$store.state.user.userInfo.name;\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}