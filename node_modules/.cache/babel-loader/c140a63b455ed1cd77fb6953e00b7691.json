{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqUserLogin, reqUserRegister, reqUserInfo } from '@/api'; // 登录与注册的模块\n\nconst state = {\n  code: '',\n  token: '',\n  userInfo: {}\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n\n  GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  }\n\n};\nconst actions = {\n  // 获取验证码\n  async getCode({\n    commit\n  }, phone) {\n    // 获取验证码的这个接口：把验证码返回，但是正常情况，后台把验证码发到用户手机上【省钱】\n    let result = await reqGetCode(phone);\n\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  // 用户注册\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  // 登录业务（token）\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data); // 服务器下发token,用户唯一标识符（uuid)\n    // 将来经常通过token找服务器要用户信息进行展示\n\n    if (result.code == 200) {\n      //用户已经登录成功获取到token\n      commit(\"USERLOGIN\", result.data.token); // 持久化存储token\n\n      localStorage.setItem(\"TOKEN\", result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  // 获取用户信息\n  async getUserInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n\n    if (result.code == 200) {\n      //提交用户信息\n      commit(\"GETUSERINFO\", result.data);\n    }\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqGetCode","reqUserLogin","reqUserRegister","reqUserInfo","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","actions","getCode","commit","phone","result","data","Promise","reject","Error","userRegister","user","userLogin","localStorage","setItem","getUserInfo","getters"],"sources":["D:/aUsers26043Desktop/vue-project2/shop/src/store/user/index.js"],"sourcesContent":["import {reqGetCode,reqUserLogin,reqUserRegister,reqUserInfo} from '@/api'\r\n// 登录与注册的模块\r\nconst state ={\r\n    code:'',\r\n    token:'',\r\n    userInfo:{}\r\n}\r\nconst mutations ={\r\n    GETCODE(state,code){\r\n        state.code=code;\r\n    },\r\n    USERLOGIN(state,token){\r\n        state.token=token\r\n    },\r\n    GETUSERINFO(state,userInfo){\r\n        state.userInfo=userInfo\r\n    }\r\n}\r\nconst actions={\r\n    // 获取验证码\r\n    async getCode({commit},phone){\r\n        // 获取验证码的这个接口：把验证码返回，但是正常情况，后台把验证码发到用户手机上【省钱】\r\n        let result= await reqGetCode(phone)\r\n        if(result.code==200){\r\n            commit('GETCODE',result.data)\r\n            return \"ok\"\r\n        }else{\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 用户注册\r\n    async userRegister({commit},user){\r\n        let result=await reqUserRegister(user)\r\n        if(result.code==200){\r\n            return \"ok\";\r\n        }else{\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 登录业务（token）\r\n    async userLogin({commit},data){\r\n        let result = await reqUserLogin(data);\r\n        // 服务器下发token,用户唯一标识符（uuid)\r\n        // 将来经常通过token找服务器要用户信息进行展示\r\n        if(result.code==200){\r\n            //用户已经登录成功获取到token\r\n            commit(\"USERLOGIN\",result.data.token);\r\n            // 持久化存储token\r\n            localStorage.setItem(\"TOKEN\",result.data.token)\r\n            return 'ok'\r\n        }else{\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 获取用户信息\r\n    async getUserInfo({commit}){\r\n        let result = await reqUserInfo();\r\n        if(result.code==200){\r\n            //提交用户信息\r\n            commit(\"GETUSERINFO\",result.data);\r\n        }\r\n    }\r\n}\r\nconst getters={}\r\nexport default{\r\n    state,mutations,actions,getters\r\n}"],"mappings":";AAAA,SAAQA,UAAR,EAAmBC,YAAnB,EAAgCC,eAAhC,EAAgDC,WAAhD,QAAkE,OAAlE,C,CACA;;AACA,MAAMC,KAAK,GAAE;EACTC,IAAI,EAAC,EADI;EAETC,KAAK,EAAC,EAFG;EAGTC,QAAQ,EAAC;AAHA,CAAb;AAKA,MAAMC,SAAS,GAAE;EACbC,OAAO,CAACL,KAAD,EAAOC,IAAP,EAAY;IACfD,KAAK,CAACC,IAAN,GAAWA,IAAX;EACH,CAHY;;EAIbK,SAAS,CAACN,KAAD,EAAOE,KAAP,EAAa;IAClBF,KAAK,CAACE,KAAN,GAAYA,KAAZ;EACH,CANY;;EAObK,WAAW,CAACP,KAAD,EAAOG,QAAP,EAAgB;IACvBH,KAAK,CAACG,QAAN,GAAeA,QAAf;EACH;;AATY,CAAjB;AAWA,MAAMK,OAAO,GAAC;EACV;EACA,MAAMC,OAAN,CAAc;IAACC;EAAD,CAAd,EAAuBC,KAAvB,EAA6B;IACzB;IACA,IAAIC,MAAM,GAAE,MAAMhB,UAAU,CAACe,KAAD,CAA5B;;IACA,IAAGC,MAAM,CAACX,IAAP,IAAa,GAAhB,EAAoB;MAChBS,MAAM,CAAC,SAAD,EAAWE,MAAM,CAACC,IAAlB,CAAN;MACA,OAAO,IAAP;IACH,CAHD,MAGK;MACD,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACH;EACJ,CAXS;;EAYV;EACA,MAAMC,YAAN,CAAmB;IAACP;EAAD,CAAnB,EAA4BQ,IAA5B,EAAiC;IAC7B,IAAIN,MAAM,GAAC,MAAMd,eAAe,CAACoB,IAAD,CAAhC;;IACA,IAAGN,MAAM,CAACX,IAAP,IAAa,GAAhB,EAAoB;MAChB,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAOa,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACH;EACJ,CApBS;;EAqBV;EACA,MAAMG,SAAN,CAAgB;IAACT;EAAD,CAAhB,EAAyBG,IAAzB,EAA8B;IAC1B,IAAID,MAAM,GAAG,MAAMf,YAAY,CAACgB,IAAD,CAA/B,CAD0B,CAE1B;IACA;;IACA,IAAGD,MAAM,CAACX,IAAP,IAAa,GAAhB,EAAoB;MAChB;MACAS,MAAM,CAAC,WAAD,EAAaE,MAAM,CAACC,IAAP,CAAYX,KAAzB,CAAN,CAFgB,CAGhB;;MACAkB,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BT,MAAM,CAACC,IAAP,CAAYX,KAAzC;MACA,OAAO,IAAP;IACH,CAND,MAMK;MACD,OAAOY,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACH;EACJ,CAnCS;;EAoCV;EACA,MAAMM,WAAN,CAAkB;IAACZ;EAAD,CAAlB,EAA2B;IACvB,IAAIE,MAAM,GAAG,MAAMb,WAAW,EAA9B;;IACA,IAAGa,MAAM,CAACX,IAAP,IAAa,GAAhB,EAAoB;MAChB;MACAS,MAAM,CAAC,aAAD,EAAeE,MAAM,CAACC,IAAtB,CAAN;IACH;EACJ;;AA3CS,CAAd;AA6CA,MAAMU,OAAO,GAAC,EAAd;AACA,eAAc;EACVvB,KADU;EACJI,SADI;EACMI,OADN;EACce;AADd,CAAd"},"metadata":{},"sourceType":"module"}