{"ast":null,"code":"import { mapState } from 'vuex'; // 引入swiper\n// import Swiper from 'swiper'\n\nexport default {\n  name: \"ListContainer\",\n\n  mounted() {\n    // 派发action:通过Vuex发起ajax请求，将数据存储到仓库当中\n    this.$store.dispatch(\"getBannerList\"); // mounted：组件挂载完毕，正常说组件结构（dom)已经全部有了\n    // 为什么swpier实例在mounted当中直接书写不可以：因为结构还没有完整\n    // 在new Swpier实例之前，页面中的结构\n    // 轮播图第一种方案（不采用）\n\n    /*         setTimeout(() => {\r\n                var mySwiper = new Swiper(document.querySelector(\".swiper-container\"), {\r\n                    loop: true, // 循环模式选项\r\n                    // 如果需要分页器\r\n                    pagination: {\r\n                        el: '.swiper-pagination',\r\n                        //点击小球切换图片\r\n                        clickable:true,\r\n                    },\r\n    \r\n                    // 如果需要前进后退按钮\r\n                    navigation: {\r\n                        nextEl: '.swiper-button-next',\r\n                        prevEl: '.swiper-button-prev',\r\n                    },\r\n                })\r\n            }, 1000); */\n  },\n\n  computed: { ...mapState({\n      bannerList: state => state.home.bannerList\n    })\n  },\n  watch: {// 监听bannerList数据变化：因为这条数据方式了变化\n    // bannerList: {\n    //     immediate:true,//立即监听\n    //     handler(newValue, oldValue) {\n    //         // 通过watch监听bannerList属性的属性值的变化\n    //         // 如果执行handler方法，代表组件实例身上这个属性的属性已经有了【数组：四个元素】\n    //         // 当前这个函数执行：只能保证bannerList数据已经有了，但是你没办法保证v-for已经执行结束了\n    //         // v-for执行完毕，才有结构【现在在watch当中没办法保证的】\n    //         // netxTick:在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM\n    //         this.$nextTick(()=>{\n    //             // 执行这个回调时候：保证服务器数据回来了，v-for执行完毕了【轮播图需要的结构也有了】\n    //             var mySwiper = new Swiper(this.$refs.mySwiper, {\n    //             loop: true, // 循环模式选项\n    //             // 如果需要分页器\n    //             pagination: {\n    //                 el: '.swiper-pagination',\n    //                 //点击小球切换图片\n    //                 clickable: true,\n    //             },\n    //             // 如果需要前进后退按钮\n    //             navigation: {\n    //                 nextEl: '.swiper-button-next',\n    //                 prevEl: '.swiper-button-prev',\n    //             },\n    //         })\n    //         })\n    //     }\n    // }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}