{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedByid } from \"@/api\";\nconst state = {\n  cartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst actions = {\n  // 获取购物车的列表数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit(\"GETCARTLIST\", result.data);\n    }\n  },\n\n  // 删除购物车某一个产品(服务器无需返回数据)\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeleteCartById(skuId);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  // 修改购物车某一个产品的选中状态\n  async UpdateCheckedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckedByid(skuId, isChecked);\n\n    if (result.code == 200) {\n      return \"ok\";\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  // 删除全部勾选的产品\n  deleteAllCheckedCart({\n    dispatch,\n    getters\n  }) {\n    // context:小仓库，commit[提交mutations修改state],getter[计算属性] dispatch[派发action] state[当前仓库数据]\n    // console.log(getters.cartList.cartInfoList);\n    // 获取购物车中的全部商品（是一个数组）\n    let PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(item => {\n      let promise = item.isChecked == 1 ? dispatch('deleteCartListBySkuId', item.skuId) : ''; // 将每一次返回的Promise添加到数组当中\n\n      PromiseAll.push(promise);\n    }); // 只要全部全部p1|p2....都成功，返回即为成功\n    // 如果有一个失败，返回即为失败结果\n\n    return Promise.all(PromiseAll);\n  },\n\n  // 修改全部产品的状态\n  updateAllCartIsChecked({\n    dispatch,\n    state\n  }, isChecked) {\n    // 数组\n    let promiseAll = [];\n    state.cartList[0].cartInfoList.forEach(item => {\n      let promise = dispatch('UpdateCheckedById', {\n        skuId: item.skuId,\n        isChecked\n      });\n      promiseAll.push(promise);\n    }); // 最终返回的结果\n\n    return Promise.all(promiseAll);\n  }\n\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}